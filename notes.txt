1/12/24
    Trying to make an actual platformer
    Json
        I have something here
        create a struct definition that derives Serialized and Deserialized
            `this struct should have the necessary info for the level, character, hitboxes, sprites, etc.
        read from a json file (using the fs library) to a string with:
            fs::read_to_string(path to the json file)
        create a mutable instance of your Serialized, Deserialized struct from your json string with:
            serde_json::from_str( reference to your json string)
        change whatever data you want
        reserialize the struct instance into a string with:
            serde_json::to_string(reference to your struct instance)
        write your string into the original json file with
            fs::write(path, data)

1/20/24
    File path at the moment is dependant on my current location, since I'm using ./stuff/more_stuff. Try using an absolute filename
        Solution worked, but will need to make this more general if I'm to have it run on other computers?
    Following logic from 1/12, we want to
        string = fs::read_to_string( path )                             <-- Read from json file
        json_structure: JsonTest = serde_json::from_str( &string )      <-- 
        json_structure.aspect = updated value
        updated_string = serde_json::to_string( &json_structure )
        ...
    I redid some stuff, got it to work! It does mess up the formatting of my json files though, but I think this is ok

1/21/24
    working on including bevy_animation crate
    issue with initial examples, not sure what values to use for specific parameters
        animation.insert_animations() call, with frame parameter:
            sprite doesn't show with 1, 1 as values, but I get an error at higher values (out of index bound error)
        when frame is set to Vec2 --> 0.0, 0.0, my spritesheet shows up, but it provides the entire sheet, and doesn't load the specific frame and loop through.
            do I need to provide it with an aseprite animation or something like that? ie, do I need to provide it with 4 images instead of a spritesheet with 4 portions of the idle animation?

        other thing i want to check is if I can properly pick up the animation event, as im currently using an event writer
            ie, what shoud i do for impleneting event readers? what logic do I want?
        
2/7/24
    decided to go back to my original animation implementation
    working on hitbox draw system using this set of tasks -- https://www.reddit.com/r/bevy/comments/13ogm9q/anyone_have_any_examples_of_box_selecting/
        got world coordinates for the mouse cursor
        have a system (draw_hitbox) that stores the current mouse coordinates after entering the Draw state and left
            clicking.
        next step is to provide logic and directions to the user to click a second time, store that value, and use your
            two stored coordinates to update the hitbox information for your sprite
        the idea would be for your draw_hitbox system to eventually modify a json file that contains the sprite's hitbox data
        ---important step:---
            when you have the two coordinates as Vec2's, you need to convert them again into coordinates relative to the sprite's
                transform

    implemented a resource to store the cursor's world position, but this is implemented with Default / a bare bones
        implementation. I might want to refine the resource (in src/resources.rs) so that it has named parameters instead
            of just storing a Vec2

2/18/24
    did some work on drawn hitbox coordinates system.
        still needs to send an event once I release the mouse

    added a debug system to display the game resources --> press L during paused state
        implement one that displays the player resources as well
        when entering paused, print out your available hotkeys so you don't get lost
    
    should try to implement event handling next

2/23/24
    how should i handle events?
    ex: for animation, I have animate_sprite which loops through the current indeces, and sends an event to event_handler (maybe should be named
        animation_event_handler).
        when an animation ends, two things need to happen -- the indeces need to be reset to the idle indeces, and the character needs to return
        to an idle state (ie its is_idle value needs to go back to true)
            a third thing would be if a projectile ends -- in this case the projectile entity would need to be despawned
        which function should do what?

    might need to replace my current event handling strategy to accomodate events?
        https://www.reddit.com/r/gamedev/comments/18xmm9/how_does_event_handling_work/
        "Events are used to replace iterative state polling (checking the state of something over and over again)."
        "If your game is coded as a loop of if-then statements you will have a hard time."
